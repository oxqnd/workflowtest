name: Favus Security Scan

permissions:
  contents: read
  pull-requests: write
  issues: write

on:
  pull_request:
  push:
    branches: [main, develop]

jobs:
  go-security:
    name: Go Vulnerability Scan (Multipart Uploader)
    runs-on: ubuntu-latest
    container: public.ecr.aws/amazonlinux/amazonlinux:2023

    steps:
      - name: Install Go and tools
        run: |
          dnf install -y golang git tar gzip
          go install golang.org/x/vuln/cmd/govulncheck@latest

      - name: Checkout source
        uses: actions/checkout@v4

      - name: Run govulncheck on uploader package
        id: govuln
        run: |
          govulncheck ./internal/uploader/... | tee govuln_report.txt

      - name: Comment govulncheck result on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const output = fs.readFileSync('govuln_report.txt', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `🛡️ **Go Vulnerability Report (Multipart Uploader)**\n\n\`\`\`\n${output.substring(0, 6500)}\n\`\`\``
            });

  nextjs-security:
    name: Next.js Audit (Upload Status UI)
    runs-on: ubuntu-latest
    container: public.ecr.aws/amazonlinux/amazonlinux:2023

    steps:
      - name: Install Node.js
        run: |
          curl -fsSL https://rpm.nodesource.com/setup_18.x | bash -
          dnf install -y nodejs git

      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          cd frontend
          npm ci

      - name: Run npm audit
        id: audit
        run: |
          cd frontend
          npm audit --audit-level=moderate > audit.txt || true

      - name: Comment audit result on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const output = fs.readFileSync('frontend/audit.txt', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `🧪 **npm Audit Report (Upload Status UI)**\n\n\`\`\`\n${output.substring(0, 6500)}\n\`\`\``
            });
